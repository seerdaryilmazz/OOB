<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>email-service</artifactId>
    <version>0.0.2</version>

    <parent>
        <groupId>ekol.oneorder</groupId>
        <artifactId>parent-pom</artifactId>
        <version>1.5.2</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>ekol.oneorder</groupId>
            <artifactId>library.mongodb</artifactId>
            <version>1.2.10</version>
        </dependency>
        <dependency>
            <groupId>ekol.oneorder</groupId>
            <artifactId>library.event</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>ekol.oneorder</groupId>
            <artifactId>library.logging</artifactId>
            <version>1.0.5</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--
            TODO: Aşağıdaki açıklamaları dikkate alıp durumu tekrar değerlendirmek lazım.
            DİKKAT: Undertow yerine Tomcat kullanmaya başladığımızda dosya upload işlemlerinde
            "Required request part '...' is not present" şeklinde hata alıyoruz. Önceden kullandığımız
            spring-boot sürümlerinde bu durum oluşmuyordu, spring-boot 1.5.2 sürümü ile bu durumu yaşamaya başladık.
            Projedeki MultipartResolverConfig.java'daki konfigürasyonu geçici bir çözüm olarak ekledik ve bu sadece
            Undertow'da çalışıyor. Dolayısıyla aşağısını silerken dikkatli olmak lazım.
            -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--
        TODO: Aşağıdaki açıklamaları dikkate alıp durumu tekrar değerlendirmek lazım.
        DİKKAT: Undertow yerine Tomcat kullanmaya başladığımızda dosya upload işlemlerinde
        "Required request part '...' is not present" şeklinde hata alıyoruz. Önceden kullandığımız
        spring-boot sürümlerinde bu durum oluşmuyordu, spring-boot 1.5.2 sürümü ile bu durumu yaşamaya başladık.
        Projedeki MultipartResolverConfig.java'daki konfigürasyonu geçici bir çözüm olarak ekledik ve bu sadece
        Undertow'da çalışıyor. Dolayısıyla aşağısını silerken dikkatli olmak lazım.
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-ribbon</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>de.siegmar</groupId>
            <artifactId>logback-gelf</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>
        <dependency>
        	<groupId>org.projectlombok</groupId>
        	<artifactId>lombok</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>